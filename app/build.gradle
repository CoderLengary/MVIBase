apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.lengary_l.mvi_base"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

ext {
    supportV7 = "1.0.2"
    supportDesign = "1.1.0-alpha05"
    constraintLayoutVersion = '1.1.3'
    kodeinVersion = '6.0.1'
    roomVersion = '2.1.0-alpha06'
    rxjavaVersion = '2.2.4'
    rxandroidVersion = '2.1.0'
    rxkotlinVersion = '2.2.0'
    //autoDisposeVersion = '0.6.1'
    arrowVersion = '0.7.3'
    autoDisposeVersion = '1.1.0'
    rxbindingVersion = "3.0.0-alpha2"
    gsonVerson = "2.8.5"
    lifecycleVersion = "2.0.0"
    retrofitVersion = '2.6.0'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
    implementation "androidx.appcompat:appcompat:$versions.support"
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"

    // Kodein
    implementation "org.kodein.di:kodein-di-generic-jvm:$versions.kodein"
    implementation "org.kodein.di:kodein-di-framework-android-core:$versions.kodein"
    implementation "org.kodein.di:kodein-di-framework-android-support:$versions.kodein"
    implementation "org.kodein.di:kodein-di-framework-android-x:$versions.kodein"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    implementation "androidx.room:room-rxjava2:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"

    // AutoDispose
    implementation "com.uber.autodispose:autodispose:$versions.autoDispose"
    implementation "com.uber.autodispose:autodispose-ktx:$versions.autoDispose"
    implementation "com.uber.autodispose:autodispose-android:$versions.autoDispose"
    implementation "com.uber.autodispose:autodispose-android-archcomponents-ktx:$versions.autoDispose"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    implementation "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"

    // Rxbinding
    implementation "com.jakewharton.rxbinding3:rxbinding-core:$versions.rxbinding"
    implementation "com.jakewharton.rxbinding3:rxbinding-appcompat:$versions.rxbinding"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"

    // Arrow
    implementation "io.arrow-kt:arrow-core:$versions.arrow"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$versions.leakcanary"
    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$versions.leakcanary"


    implementation project(':mvi_lib')
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test:runner:$versions.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
}
